[클래스 정의] MyMiniDetector (딥러닝 모델의 기본 설계도를 상속)

[초기화 함수 __init__] - 모델의 필요한 부품들을 준비하고 정의하는 곳
    - 부모 클래스의 초기화 함수를 먼저 실행

    - "백본(Backbone)"이라는 이름의 순차적인 부품 그룹을 정의:
        (입력 데이터 형태: 이미지 여러 장, 흑백 1채널, 높이 256, 너비 256)
        - [1단계 합성곱 블록]
            - 3x3 합성곱 8개를 사용해 이미지 특징 추출 (입력 채널: 1, 출력 채널: 8)
            - ReLU 활성화 함수로 특징을 명확하게 만듦
            - 2x2 맥스 풀링으로 특징 맵의 크기를 절반으로 줄임 (계산 효율성 증가)
                (데이터 형태 변화: ... 8채널, 높이 128, 너비 128)
        - [2단계 합성곱 블록]
            - 3x3 합성곱 필터 16개를 사용해 더 깊은 특징 추출 (입력 채널: 8, 출력 채널: 16)
            - ReLU 활성화 함수
            - 2x2 맥스 풀링으로 크기를 다시 절반으로 줄임
                (최종 특징 맵 형태: ... 16채널, 높이 64, 너비 64)
            
    - "헤드(Head)"라는 이름의 순차적인 부품 그룹을 정의:
        - Flatten (납작하게 만들기): 3차원 특징 맵을 1차원의 긴 데이터로 펼침
            (데이터 형태 변화: ... 16 * 64 * 64 = 65,536개의 숫자 배열)
        - [1단계 선형 분석]
            - 65536개의 입력을 받아 64개의 출력으로 정보를 압축
            - ReLU 활성화 함수
        - [2단계 선형 분석]
            - 64개의 입력을 받아 최종 목표인 5개의 숫자로 결과를 도출
[순전파 함수 forward(입력 데이터 x)] - 데이터가 부품들을 통과하는 흐름을 정의하는 곳
    1. 입력 데이터 x를 '백본'에 통과시켜 특징 맵(features)을 얻음
    2. 얻어진 특징 맵을 '헤드'에 통과시켜 5개의 날것(raw) 예측값(output)을 얻음

    3. (후처리) 예측값의 의미를 부여:
        - 5개의 예측값 중 첫 번째 값(인덱스 0)을 뽑아 시그모이드(Sigmoid) 함수에 통과시킴
            (결과: 0과 1 사이의 '객체 존재 확률' 값)
        - 나머지 네 개의 값(인덱스 1부터 끝까지)은 그대로 '바운딩 박스 좌표'로 사용
    
    4. '객체 존재 확률'과 '바운딩 박스 좌표'를 다시 하나의 묶음으로 합침 
    
    5. 최종 결과 묶음을 반환